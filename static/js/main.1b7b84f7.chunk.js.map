{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","placeholder","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","filter","element","About","myStyle","data-bs-parent","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","BrowserRouter","basename","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.1b7b84f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a> */}\r\n\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n\r\n        \r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* Enable Dark Mode */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            } mx-2`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              DarkMode\r\n            </label>\r\n          </div>\r\n\r\n          {/* Search Button */}\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  const handleUpClick =()=>\r\n  {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\",\"success\");\r\n  }\r\n\r\n  const handleLoClick =()=>\r\n    {\r\n      // console.log(\"lowercase was clicked\" + text);\r\n      let newText = text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleClearClick =()=>\r\n      {\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text has been cleared successfully!\",\"success\");\r\n      }\r\n\r\n  const handleOnchange =(event)=>\r\n    {\r\n      // console.log(\"Onchange!\");\r\n      setText(event.target.value);\r\n    }\r\n    //Credits: YT subs1\r\n    const handleCopy = () => {\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text copied to Clipboard!\",\"success\");\r\n    }\r\n    //Credits: YT subs2\r\n    const handleExtraSpaces = () =>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra Space has been removed!\",\"success\");\r\n    }\r\n\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className= \"container\" style={{color: props.mode === 'dark' ? 'white' : '#070F2B'}}>\r\n <h1 className='mb-4'>{props.heading}</h1>   \r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value ={text} onChange={handleOnchange} style={{backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',  color: props.mode === 'dark' ? 'white' : '#070F2B'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n<button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n<button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\r\n<button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy text</button>\r\n<button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\"  style={{color: props.mode === 'dark' ? 'white' : '#070F2B'}}>\r\n      <h2>Your text summary</h2>\r\n      <p> <b>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</b></p>\r\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0? text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n","import React, {} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [ myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white',\r\n        \r\n    // })\r\nlet myStyle={\r\n  color: props.mode === 'dark' ? 'white' : '#042743',\r\n  backgroundColor: props.mode === 'dark' ? 'rgb(36 74 104)' : 'white',\r\n}\r\n\r\n  return (\r\n    <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\" style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n             <strong> What is Text Textutils?</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n             TextUtils is a tool that helps you clean up and organize your text. Whether you need to remove extra spaces, correct capitalization, or adjust line breaks, this tool simplifies your text editing tasks.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\" style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong> What is Word Counter?</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n            The Word Counter tool is completely free and lets you quickly count words, characters, and sentences in your text. Perfect for writers, students, and anyone needing to track text length.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\" style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>What is Text Encryption and Decryption?</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n            Encrypt and decrypt your text for free to keep sensitive information secure. Protect your data with our easy-to-use encryption and decryption tools.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n          const lower = word.toLowerCase();\r\n          return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n            <div style={{height: '50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize (props.alert.type)}</strong> : {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(`light`); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  // Toggle  Dark Mode\n  const toggleMode = () => {\n    if (mode === `light`) {\n      setMode(`dark`);\n      document.body.style.backgroundColor = \"#020334\";\n      showAlert(`Dark mode has been enabled`, \"success\");\n      // document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(`light`);\n      document.body.style.backgroundColor = \"white\";\n      showAlert(`Light mode has been enabled`, \"success\");\n      // document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter basename=\"/react-my-app\">\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\" mode={mode}>\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode}/>} />\n            <Route exact path=\"/\"\n              element={\n                <TextForm showAlert={showAlert}\n                  heading=\"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode}/>}\n                  />   \n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}